// <auto-generated />
using System;
using AccountLedger.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccountLedger.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221013082413_NewTables")]
    partial class NewTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.AccountTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LedgerAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TransType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LedgerAccountId");

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.LedgerAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LedgerAccounts");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.ToDoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDone")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.AccountTransaction", b =>
                {
                    b.HasOne("AccountLedger.Core.ProjectAggregate.LedgerAccount", null)
                        .WithMany("Items")
                        .HasForeignKey("LedgerAccountId");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.ToDoItem", b =>
                {
                    b.HasOne("AccountLedger.Core.ProjectAggregate.Project", null)
                        .WithMany("Items")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.LedgerAccount", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("AccountLedger.Core.ProjectAggregate.Project", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
